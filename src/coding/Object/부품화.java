/*
 부품화
프로그래밍은 정신적인 활동이다. 정신적인 것은 실체가 없고, 무한하고, 유연하다.
예전의 단일화 되어있던 컴퓨터는 하나가 고장이 나면 전체를 사용 할 수 없다. 
하지만 요즘은 키보드 마우스 본체 모니터 처럼 각각으로 나뉘어있다.
한가지가 고장나면 그것만 보수를 해주면 되는 것이다. 프로그램도 동일하게 생각하면 된다.
정답이란건 없다. 자신이 처해져있는 환경에서 적합함을 찾는것이 숙제이다.
메소드는 부품의 예라고 할 수 있다.
메소드를 만들면 코드의 양을 극적으로 줄일 수 있고, 메소드 별로 기능이 분류되어 있기 때문에 필요한 코드를 찾기도 쉽고
문제의 진단도 빨라진다.
 */
